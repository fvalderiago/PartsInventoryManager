{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Test\\\\source\\\\repos\\\\PartsInventoryManager\\\\ClientApp\\\\src\\\\App.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport PartForm from './components/PartForm';\nimport PartsTable from './components/PartsTable';\nimport FilterInput from './components/FilterInput';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [parts, setParts] = useState([]);\n  const [form, setForm] = useState({\n    name: '',\n    category: '',\n    supplier: '',\n    quantity: 0,\n    price: 0\n  });\n  const [filter, setFilter] = useState('');\n  const fetchParts = async (searchTerm = '') => {\n    try {\n      const res = await axios.get(`/api/parts${searchTerm ? `?name=${searchTerm}` : ''}`);\n      setParts(res.data);\n    } catch (err) {\n      console.error('Error fetching parts:', err);\n    }\n  };\n  useEffect(() => {\n    fetchParts();\n  }, []);\n  const handleChange = e => {\n    setForm({\n      ...form,\n      [e.target.name]: e.target.value\n    });\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    try {\n      await axios.post('/api/parts', form);\n      setForm({\n        name: '',\n        category: '',\n        supplier: '',\n        quantity: 0,\n        price: 0\n      });\n      fetchParts();\n    } catch (err) {\n      console.error('Error adding part:', err);\n    }\n  };\n  const handleDelete = async id => {\n    try {\n      await axios.delete(`/api/parts/${id}`);\n      fetchParts();\n    } catch (err) {\n      console.error('Error deleting part:', err);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"p-4 max-w-4xl mx-auto\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"text-2xl font-bold mb-4\",\n      children: \"Parts Inventory Manager\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(FilterInput, {\n      filter: filter,\n      onFilterChange: val => {\n        setFilter(val);\n        // Fetch parts as user types with debounce\n        fetchParts(val);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 2\n    }, this), /*#__PURE__*/_jsxDEV(PartForm, {\n      form: form,\n      onChange: handleChange,\n      onSubmit: handleSubmit\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(PartsTable, {\n      parts: parts,\n      onDelete: handleDelete\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"OfcPd6JyURdwqb4SMSWjCfYF79g=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","useState","axios","PartForm","PartsTable","FilterInput","jsxDEV","_jsxDEV","App","_s","parts","setParts","form","setForm","name","category","supplier","quantity","price","filter","setFilter","fetchParts","searchTerm","res","get","data","err","console","error","handleChange","e","target","value","handleSubmit","preventDefault","post","handleDelete","id","delete","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onFilterChange","val","onChange","onSubmit","onDelete","_c","$RefreshReg$"],"sources":["C:/Users/Test/source/repos/PartsInventoryManager/ClientApp/src/App.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport axios from 'axios';\r\nimport PartForm from './components/PartForm';\r\nimport PartsTable from './components/PartsTable';\r\nimport FilterInput from './components/FilterInput';\r\n\r\nfunction App() {\r\n  const [parts, setParts] = useState([]);\r\n  const [form, setForm] = useState({ name: '', category: '', supplier: '', quantity: 0, price: 0 });\r\n  const [filter, setFilter] = useState('');\r\n\r\n  const fetchParts = async (searchTerm = '') => {\r\n  try {\r\n    const res = await axios.get(`/api/parts${searchTerm ? `?name=${searchTerm}` : ''}`);\r\n    setParts(res.data);\r\n  } catch (err) {\r\n    console.error('Error fetching parts:', err);\r\n  }\r\n};\r\n\r\n\r\n  useEffect(() => { fetchParts(); }, []);\r\n\r\n  const handleChange = (e) => {\r\n    setForm({ ...form, [e.target.name]: e.target.value });\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    try {\r\n      await axios.post('/api/parts', form);\r\n      setForm({ name: '', category: '', supplier: '', quantity: 0, price: 0 });\r\n      fetchParts();\r\n    } catch (err) {\r\n      console.error('Error adding part:', err);\r\n    }\r\n  };\r\n\r\n  const handleDelete = async (id) => {\r\n    try {\r\n      await axios.delete(`/api/parts/${id}`);\r\n      fetchParts();\r\n    } catch (err) {\r\n      console.error('Error deleting part:', err);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"p-4 max-w-4xl mx-auto\">\r\n      <h1 className=\"text-2xl font-bold mb-4\">Parts Inventory Manager</h1>\r\n\r\n\t<FilterInput filter={filter} onFilterChange={(val) => {\r\n  \tsetFilter(val);\r\n  \t// Fetch parts as user types with debounce\r\n  \tfetchParts(val);\r\n\t}} />\r\n\r\n      <PartForm form={form} onChange={handleChange} onSubmit={handleSubmit} />\r\n      <PartsTable parts={parts} onDelete={handleDelete} />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}